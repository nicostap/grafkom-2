/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 .\lampu_jalan.glb --types 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        Light_Street_1001: THREE.Mesh;
        Light_Street_1001_1: THREE.Mesh;
        Light_Street_1001_2: THREE.Mesh;
    };
    materials: {
        ["Grey.001"]: THREE.MeshStandardMaterial;
        ["LightGrey.001"]: THREE.MeshStandardMaterial;
        ["Light.001"]: THREE.MeshStandardMaterial;
    };
};

type ContextType = Record<
    string,
    React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function LampuJalan(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF("/lampu_jalan.glb") as GLTFResult;

    materials["Light.001"].emissiveIntensity = 0.5;

    return (
        <group {...props} dispose={null}>
            <group rotation={[-Math.PI / 2, 0, -1.6]} scale={525.982}>
                <mesh
                    geometry={nodes.Light_Street_1001.geometry}
                    material={materials["Grey.001"]}
                />
                <mesh
                    geometry={nodes.Light_Street_1001_1.geometry}
                    material={materials["LightGrey.001"]}
                />
                <mesh
                    geometry={nodes.Light_Street_1001_2.geometry}
                    material={materials["Light.001"]}
                />
            </group>
        </group>
    );
}

useGLTF.preload("/lampu_jalan.glb");
